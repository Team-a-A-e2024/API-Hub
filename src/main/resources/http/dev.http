### A simple get request to the test endpoint. No need for login
GET {{url}}/auth/test/

### Create a new user - this one will only get a USER role by default
POST {{url}}/auth/register/

{
    "username": "user2",
    "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}

### Get user by ID
GET {{url}}/auth/user/1

###
POST {{url}}/auth/login/

{
    "username": "user2",
    "password": "test123"
}

###
PUT {{url}}/auth/user/1
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "id": 1,
    "username": "user",
    "password": "newpass123"
}

###
GET {{url}}/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST {{url}}/auth/user/role/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "admin"
}

###
GET {{url}}/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### GameDAO endpoint readAllTest
GET {{url}}/games
Accept: application/json
Authorization: Bearer {{jwt_token}}

### GameDAO endpoint searchByNameTest
GET {{url}}/games/search?query=Elden Ring
Accept: application/json
Authorization: Bearer {{jwt_token}}

### GameDAO endpoint SearchByIdTest
GET {{url}}/game/3
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Get user favorites
GET {{url}}/user/1/favorites
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add favorite
POST {{url}}/games/1/favorite
Accept: application/json
Authorization: Bearer {{jwt_token}}

{}

### Remove favorite
DELETE {{url}}/games/1/favorite
Accept: application/json
Authorization: Bearer {{jwt_token}}

{}

###
DELETE {{url}}/auth/user/1
Accept: application/json
Authorization: Bearer {{jwt_token}}